{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/SuggestInput.vue?vue&type=style&index=0&id=0ebbdbd6&scoped=true&lang=css","dependencies":[{"path":"/app/app/src/components/SuggestInput.vue","mtime":1643109528709},{"path":"/app/app/node_modules/css-loader/dist/cjs.js","mtime":1639906765242},{"path":"/app/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1639906773228},{"path":"/app/app/node_modules/postcss-loader/src/index.js","mtime":1639906767500},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdWdnZXN0LWxpc3QgewogIGJvcmRlcjogMXB4ICNjZWQ0ZGEgc29saWQ7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKfQo="},{"version":3,"sources":["/app/app/src/components/SuggestInput.vue"],"names":[],"mappings":";AAsIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxB","file":"/app/app/src/components/SuggestInput.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      v-model=\"refState.inputValue\"\n      @input=\"listFilter(refState.inputValue)\"\n      @focus=\"onFocus\"\n      @blur=\"unFocus\"\n    />\n    <div v-show=\"isDisplay\" class=\"suggest-list\">\n      <option\n        v-for=\"(element, index) in refState.filteredList\"\n        :key=\"index\"\n        :mouseleave=\"mouseLeave\"\n        @click=\"setInputValue(element)\"\n        @mouseover=\"mouseover\"\n        @mouseleave=\"mouseLeave\"\n      >\n        {{ element }}\n      </option>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  PropType,\n  reactive,\n  onMounted,\n  watch,\n  computed,\n} from \"vue\";\n\ninterface State {\n  filteredList: string[];\n  inputValue: string;\n  isFocus: boolean;\n  isHover: boolean;\n}\n\nexport default defineComponent({\n  props: {\n    value: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    list: {\n      type: Array as PropType<string[]>,\n      required: true,\n    },\n    placeholder: {\n      type: String as PropType<string>,\n      required: false,\n    },\n  },\n\n  setup(props, { emit }) {\n    console.log(\"SuggestInputの中\");\n\n    const refState = reactive<State>({\n      filteredList: [],\n      inputValue: \"\",\n      isFocus: false,\n      isHover: false,\n    });\n\n    onMounted(() => {\n      listFilter(refState.inputValue);\n    });\n\n    const listFilter = (filterText: string) => {\n      if (filterText !== \"\") {\n        refState.filteredList = props.list.filter(\n          (listItem) => listItem.indexOf(filterText) === 0\n        );\n      } else {\n        refState.filteredList = [];\n      }\n    };\n\n    const onFocus = () => {\n      refState.isFocus = true;\n    };\n\n    const unFocus = () => {\n      refState.isFocus = false;\n    };\n\n    const mouseover = () => {\n      refState.isHover = true;\n    };\n\n    const mouseLeave = () => {\n      refState.isHover = false;\n    };\n\n    const setInputValue = (selectValue: string) => {\n      refState.inputValue = selectValue;\n    };\n\n    watch(\n      () => refState.inputValue,\n      () => {\n        emit(\"update:value\", refState.inputValue);\n      }\n    );\n\n    const isDisplay = computed(() => {\n      return (\n        (refState.isFocus || refState.isHover) &&\n        refState.filteredList.length != 0\n      );\n    });\n\n    //サジェスト入力処理はできたので、見た目を整える\n    //それが出来次第、登録のテストと、idで投稿のデータが取得できない件を調べる\n\n    return {\n      refState,\n      listFilter,\n      onFocus,\n      unFocus,\n      mouseover,\n      mouseLeave,\n      setInputValue,\n      isDisplay,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.suggest-list {\n  border: 1px #ced4da solid;\n  background-color: #fff;\n}\n</style>\n"]}]}