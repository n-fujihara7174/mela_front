{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/SuggestInput.vue?vue&type=template&id=0ebbdbd6&ts=true","dependencies":[{"path":"/app/app/src/components/SuggestInput.vue","mtime":1642580611704},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/babel-loader/lib/index.js","mtime":1639906767681},{"path":"/app/app/node_modules/ts-loader/index.js","mtime":1639906768649},{"path":"/app/app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1639906773582},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxpbnB1dAogICAgICBhdXRvY29tcGxldGU9Im9mZiIKICAgICAgdi1tb2RlbDppbnB1dFZhbHVlPSJpbnB1dFZhbHVlQ29tcHV0ZWQiCiAgICAgIEBmb2N1cz0ib25Gb2N1cyIKICAgIC8+CiAgICA8aW5wdXQKICAgICAgYXV0b2NvbXBsZXRlPSJvZmYiCiAgICAgIHYtbW9kZWw6aW5wdXRWYWx1ZT0iaW5wdXRWYWx1ZUNvbXB1dGVkIgogICAgICBAZm9jdXM9Im9uRm9jdXMiCiAgICAvPgogICAgPGRpdiB2LXNob3c9IklzRm9jdXMiPgogICAgICA8dWw+CiAgICAgICAgPGxpCiAgICAgICAgICB2LWZvcj0iKHN1Z2dlc3QsIGluZGV4KSBpbiBzdWdnZXN0cyIKICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgQGNsaWNrPSJvbkNsaWNrU3VnZ2VzdChzdWdnZXN0KSIKICAgICAgICA+CiAgICAgICAgICB7eyBzdWdnZXN0IH19CiAgICAgICAgPC9saT4KICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/app/app/src/components/SuggestInput.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC;QACD,CAAC,CAAC;UACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC;UACE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/app/app/src/components/SuggestInput.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <input\n      autocomplete=\"off\"\n      v-model:inputValue=\"inputValueComputed\"\n      @focus=\"onFocus\"\n    />\n    <input\n      autocomplete=\"off\"\n      v-model:inputValue=\"inputValueComputed\"\n      @focus=\"onFocus\"\n    />\n    <div v-show=\"IsFocus\">\n      <ul>\n        <li\n          v-for=\"(suggest, index) in suggests\"\n          :key=\"index\"\n          @click=\"onClickSuggest(suggest)\"\n        >\n          {{ suggest }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  setup() {\n    const inputValue = ref(\"\");\n    const inputValueComputed = computed({\n      get: () => inputValue.value,\n      set: (value) => (inputValue.value = value),\n    });\n\n    let IsFocus = false;\n\n    //サジェストがクリックされたら値をテキストボックスに入れる\n    const onClickSuggest = (suggest: string) => {\n      inputValue.value = suggest;\n    };\n\n    const onFocus = () => {\n      IsFocus = true;\n    };\n\n    const onBlur = () => {\n      IsFocus = false;\n    };\n\n    return {\n      inputValue,\n      IsFocus,\n      onClickSuggest,\n      onFocus,\n      onBlur,\n    };\n  },\n});\n</script>\n"]}]}