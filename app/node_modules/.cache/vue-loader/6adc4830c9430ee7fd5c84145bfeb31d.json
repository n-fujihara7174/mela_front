{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/common/molecules/InputField.vue?vue&type=template&id=75e1c4d6&ts=true","dependencies":[{"path":"/app/app/src/components/common/molecules/InputField.vue","mtime":1647787143210},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/babel-loader/lib/index.js","mtime":1639906767681},{"path":"/app/app/node_modules/ts-loader/index.js","mtime":1639906768649},{"path":"/app/app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1639906773582},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxJbnB1dENvbHVtbgogICAgICB2LW1vZGVsOnZhbHVlPSJyZWZTdGF0ZS52YWx1ZSIKICAgICAgOmlzRXJyb3I9IiEhcmVmU3RhdGUuZXJyb3JNZXNzYWdlIgogICAgICA6dHlwZT0icmVmU3RhdGUudHlwZSIKICAgICAgdi1tb2RlbDppc0ZvY3VzPSJyZWZTdGF0ZS5pc0ZvY3VzIgogICAgPjwvSW5wdXRDb2x1bW4+CiAgICA8ZGl2IHYtc2hvdz0ianVkZ2VEaXNwbGF5Ij4KICAgICAgPFN1Z2dlc3RMaXN0CiAgICAgICAgdi1tb2RlbDp2YWx1ZT0icmVmU3RhdGUudmFsdWUiCiAgICAgICAgOmxpc3Q9InJlZlN0YXRlLmxpc3QiCiAgICAgICAgdi1tb2RlbDppc0hvdmVyPSJyZWZTdGF0ZS5pc0hvdmVyIgogICAgICAgIHYtbW9kZWw6aXNFeGlzdExpc3Q9InJlZlN0YXRlLmlzRXhpc3RMaXN0IgogICAgICA+PC9TdWdnZXN0TGlzdD4KICAgIDwvZGl2PgogICAgPEVycm9yTWVzc2FnZUxhYmVsCiAgICAgIDplcnJvck1lc3NhZ2U9InJlZlN0YXRlLmVycm9yTWVzc2FnZSIKICAgID48L0Vycm9yTWVzc2FnZUxhYmVsPgogIDwvZGl2Pgo="},{"version":3,"sources":["/app/app/src/components/common/molecules/InputField.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/app/app/src/components/common/molecules/InputField.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <InputColumn\n      v-model:value=\"refState.value\"\n      :isError=\"!!refState.errorMessage\"\n      :type=\"refState.type\"\n      v-model:isFocus=\"refState.isFocus\"\n    ></InputColumn>\n    <div v-show=\"judgeDisplay\">\n      <SuggestList\n        v-model:value=\"refState.value\"\n        :list=\"refState.list\"\n        v-model:isHover=\"refState.isHover\"\n        v-model:isExistList=\"refState.isExistList\"\n      ></SuggestList>\n    </div>\n    <ErrorMessageLabel\n      :errorMessage=\"refState.errorMessage\"\n    ></ErrorMessageLabel>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, reactive, watch, computed } from \"vue\";\n\nimport ErrorMessageLabel from \"@/components/common/atom/ErrorLabel.vue\";\nimport InputColumn from \"@/components/common/atom/Input.vue\";\nimport SuggestList from \"@/components/common/atom/SuggestList.vue\";\n\ninterface State {\n  value: string;\n  errorMessage: string;\n  list: string[];\n  type: string;\n  isDisplaySuggest: boolean;\n  isFocus: boolean;\n  isHover: boolean;\n  isExistList: boolean;\n}\n\nexport default defineComponent({\n  props: {\n    value: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    errorMessage: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    list: {\n      type: Array as PropType<string[]>,\n      required: false,\n      default: () => [],\n    },\n    type: {\n      type: String as PropType<string>,\n      required: false,\n      default: \"\",\n    },\n  },\n\n  components: {\n    ErrorMessageLabel: ErrorMessageLabel,\n    InputColumn: InputColumn,\n    SuggestList: SuggestList,\n  },\n\n  setup(props, { emit }) {\n    const refState = reactive<State>({\n      value: \"\",\n      errorMessage: \"\",\n      list: [],\n      type: \"\",\n      isDisplaySuggest: false,\n      isFocus: false,\n      isHover: false,\n      isExistList: false,\n    });\n\n    const setPropsToState = () => {\n      refState.value = props.value;\n      refState.list = props.list;\n      refState.type = props.type;\n      refState.isDisplaySuggest = !!props.list.length;\n    };\n\n    setPropsToState();\n\n    const emitValue = (value: string) => {\n      emit(\"update:value\", value);\n    };\n\n    const judgeDisplay = computed(() => {\n      return (\n        refState.isDisplaySuggest &&\n        refState.isExistList &&\n        (refState.isFocus || refState.isHover)\n      );\n    });\n\n    watch(\n      () => refState.value,\n      () => {\n        emitValue(refState.value);\n      }\n    );\n\n    watch(\n      () => props.value,\n      () => {\n        refState.errorMessage = props.errorMessage;\n      }\n    );\n\n    watch(\n      () => props.errorMessage,\n      () => {\n        refState.errorMessage = props.errorMessage;\n      }\n    );\n\n    return {\n      refState,\n      judgeDisplay,\n      emitValue,\n    };\n  },\n});\n</script>\n"]}]}