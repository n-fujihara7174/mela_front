{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/common/transitionListButon.vue?vue&type=style&index=0&id=1ce9308e&scoped=true&lang=css","dependencies":[{"path":"/app/app/src/components/common/transitionListButon.vue","mtime":1644060406986},{"path":"/app/app/node_modules/css-loader/dist/cjs.js","mtime":1639906765242},{"path":"/app/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1639906773228},{"path":"/app/app/node_modules/postcss-loader/src/index.js","mtime":1639906767500},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJ1dHRvbiB7CiAgd2lkdGg6IDE1MHB4OwogIG1hcmdpbi10b3A6IDMwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTAwcHg7CiAgbWFyZ2luLXJpZ2h0OiA1MHB4Owp9Cg=="},{"version":3,"sources":["/app/app/src/components/common/transitionListButon.vue"],"names":[],"mappings":";AA2DA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/app/app/src/components/common/transitionListButon.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <button\n      v-if=\"isButton\"\n      type=\"button\"\n      class=\"btn btn-primary create-user-btn\"\n      @click=\"transitionList\"\n    >\n      {{ displayText }}\n    </button>\n    <a v-else href=\"#\" @click=\"transitionList\">{{ displayText }}</a>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nexport default defineComponent({\n  props: {\n    text: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    transitionDestination: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    displayType: {\n      type: String as PropType<string>,\n      required: false,\n      default: \"link\",\n    },\n  },\n\n  setup(props) {\n    const router = useRouter();\n    const transitionList = (): void => {\n      router.push({\n        name: props.transitionDestination,\n      });\n    };\n\n    const getDisplayType = () => {\n      return props.displayType === \"button\";\n    };\n    const isButton = getDisplayType();\n\n    const getText = () => {\n      return props.text;\n    };\n    const displayText = getText();\n\n    return { transitionList, isButton, displayText };\n  },\n});\n</script>\n\n<style scoped>\nbutton {\n  width: 150px;\n  margin-top: 30px;\n  margin-bottom: 100px;\n  margin-right: 50px;\n}\n</style>\n"]}]}