{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/adminPage/common/atom/SuggestList.vue?vue&type=style&index=0&id=1e43c217&scoped=true&lang=css","dependencies":[{"path":"/app/app/src/components/adminPage/common/atom/SuggestList.vue","mtime":1645132092974},{"path":"/app/app/node_modules/css-loader/dist/cjs.js","mtime":1639906765242},{"path":"/app/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1639906773228},{"path":"/app/app/node_modules/postcss-loader/src/index.js","mtime":1639906767500},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kcm9wZG93bi1tZW51IHsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["/app/app/src/components/adminPage/common/atom/SuggestList.vue"],"names":[],"mappings":";AAkGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/app/app/src/components/adminPage/common/atom/SuggestList.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"dropdown\">\n    <div v-show=\"isDisplay\" class=\"dropdown-menu\" :size=\"listSize\">\n      <option\n        class=\"dropdown-item\"\n        v-for=\"(element, index) in refState.filteredList\"\n        :key=\"index\"\n        @click=\"emitValue(element)\"\n      >\n        {{ element }}\n      </option>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  PropType,\n  reactive,\n  onMounted,\n  computed,\n  watchEffect,\n} from \"vue\";\n\ninterface State {\n  value: string;\n  filteredList: string[];\n}\n\nexport default defineComponent({\n  props: {\n    value: {\n      type: String as PropType<string>,\n      required: true,\n    },\n    list: {\n      type: Array as PropType<string[]>,\n      required: true,\n    },\n  },\n\n  setup(props, { emit }) {\n    const refState = reactive<State>({\n      value: \"\",\n      filteredList: [],\n    });\n\n    onMounted(() => {\n      refState.value = props.value;\n      listFilter(refState.value);\n    });\n\n    const listFilter = (filterText: string) => {\n      if (filterText !== \"\") {\n        refState.filteredList = props.list.filter(\n          (listItem) => listItem.indexOf(filterText) === 0\n        );\n      } else {\n        refState.filteredList = [];\n      }\n    };\n\n    const emitValue = (value: string) => {\n      emit(\"update:value\", value);\n    };\n\n    watchEffect(() => {\n      listFilter(props.value);\n    });\n\n    /*\n       pulldownで要素を表示する個数を算出\n       サジェストのリストの要素が1つであれば、2を返却（2にしないとプルダウンの選択肢として表示されない)\n       2から10であれば、要素数そのままの個数を返却\n       10以上であれば、10を返却\n    */\n    const listSize = computed(() => {\n      let size = 0;\n      const filterSize = refState.filteredList.length;\n\n      size = filterSize === 1 ? 2 : filterSize;\n      size = filterSize > 10 ? 10 : filterSize;\n\n      return size;\n    });\n\n    return {\n      refState,\n      emitValue,\n      listFilter,\n      listSize,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.dropdown-menu {\n  display: block;\n  width: 100%;\n}\n</style>\n"]}]}