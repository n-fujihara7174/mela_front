{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/adminPage/user/UserDetail.vue?vue&type=style&index=0&id=64adc3ef&scoped=true&lang=css","dependencies":[{"path":"/app/app/src/components/adminPage/user/UserDetail.vue","mtime":1641471280422},{"path":"/app/app/node_modules/css-loader/dist/cjs.js","mtime":1639906765242},{"path":"/app/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1639906773228},{"path":"/app/app/node_modules/postcss-loader/src/index.js","mtime":1639906767500},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnVsIHsKICBsaXN0LXN0eWxlOiBub25lOwogIHBhZGRpbmctbGVmdDogMDsKfQoKbGksCi5zZWxmLWludHJvZHVjdGlvbiB7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CiAgY29sb3I6ICM2MzYzNjM7Cn0KCnRleHRhcmVhIHsKICByZXNpemU6IG5vbmU7CiAgaGVpZ2h0OiAxMDBweDsKfQoKLnRhYmxlIHRoIHsKICB3aWR0aDogMTUlOwogIHBhZGRpbmc6IDEwcHggNDBweDsKICBib3JkZXItc3R5bGU6IG5vbmU7Cn0KCi50YWJsZSB0ZCB7CiAgYm9yZGVyLXN0eWxlOiBub25lOwp9Cgoudy0xOSB7CiAgd2lkdGg6IDE5JTsKfQoKLnctMjQgewogIHdpZHRoOiAyNCU7Cn0KCi53LTQ5IHsKICB3aWR0aDogNDklOwp9Cgoubm90aSB7CiAgd2lkdGg6IDMwJTsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIG1hcmdpbi1sZWZ0OiAzLjMlOwp9Cgouc2VsZWN0LXVzZXItaWNvbiB7CiAgd2lkdGg6IDEwMHB4Owp9CgouZGlzcGxheS1ub25lIHsKICBkaXNwbGF5OiBub25lOwp9Cg=="},{"version":3,"sources":["/app/app/src/components/adminPage/user/UserDetail.vue"],"names":[],"mappings":"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","file":"/app/app/src/components/adminPage/user/UserDetail.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"mx-xl-5\">\n    <div class=\"mt-4\">\n      <a href=\"#\" @click=\"transitionList\">ユーザー一覧画面</a>\n      <span> > 詳細画面</span>\n    </div>\n    <div class=\"mt-5\">\n      <h2>詳細画面</h2>\n      <table class=\"table table-sm shadow table-hover mt-5\">\n        <tbody>\n          <tr :class=\"{ 'display-none': ! refState.isUpdate }\">\n            <th>No</th>\n            <td class=\"align-middle\">{{ refState.user.id }}</td>\n          </tr>\n          <tr>\n            <th>ユーザー名</th>\n            <td>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.user_name\"\n              />\n              <label :class=\"{ 'display-none': judgeDisplay(refState.error_message.user_name[0]) }\">{{ refState.error_message.user_name[0] }}</label>\n            </td>\n          </tr>\n          <tr>\n            <th>ユーザーID</th>\n            <td>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.user_id\"\n              />\n              <label :class=\"{ 'display-none': judgeDisplay(refState.error_message.user_id[0]) }\">{{ refState.error_message.user_id[0] }}</label>\n            </td>\n          </tr>\n          <tr>\n            <th>メールアドレス</th>\n            <td>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.email\"\n              />\n              <label :class=\"{ 'display-none': judgeDisplay(refState.error_message.email[0]) }\">{{ refState.error_message.email[0] }}</label>\n            </td>\n          </tr>\n          <tr>\n            <th>電話番号</th>\n            <td>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.phone_number\"\n              />\n              <label :class=\"{ 'display-none': judgeDisplay(refState.error_message.phone_number[0]) }\">{{ refState.error_message.phone_number[0] }}</label>\n            </td>\n          </tr>\n          <tr>\n            <th>生年月日</th>\n            <td>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.birthday\"\n              />\n              <label :class=\"{ 'display-none': judgeDisplay(refState.error_message.user_name[0]) }\">{{ refState.error_message.birthday[0] }}</label>\n            </td>\n          </tr>\n          <tr>\n            <th>画像</th>\n            <td>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.image\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <th>自己紹介</th>\n            <td>\n              <textarea\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"refState.user.self_introduction\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <th>いいね通知</th>\n            <td>{{ refState.user.can_like_notification }}</td>\n          </tr>\n          <tr>\n            <th>コメント通知</th>\n            <td>{{ refState.user.can_comment_notification }}</td>\n          </tr>\n          <tr>\n            <th>メッセージ通知</th>\n            <td>{{ refState.user.can_message_notification }}</td>\n          </tr>\n          <tr>\n            <th>削除</th>\n            <td>{{ refState.user.is_delete }}</td>\n          </tr>\n          <tr>\n            <th>登録日</th>\n            <td class=\"align-middle\">{{ refState.user.created_at }}</td>\n          </tr>\n          <tr>\n            <th>更新日</th>\n            <td class=\"align-middle\">{{ refState.user.updated_at }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <button @click=\"postUser\">テスト</button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { User } from \"@/types/User\";\n\ninterface UserExtend extends User {\n  post_count: number;\n  like_count: number;\n  follow_count: number;\n  follower_count: number;\n  message_user_count: number;\n}\n\ninterface ErrorMessage {\n  user_name: string;\n  user_id: string;\n  password_digest: string;\n  email: string;\n  phone_number: string;\n  birthday: string;\n}\n\ninterface State {\n  user: UserExtend;\n  error_message: ErrorMessage;\n  isUpdate: boolean;\n}\n\nexport default defineComponent({\n  props: {\n    id: {\n      type: String,\n      default: \"\",\n    },\n  },\n\n  setup(props) {\n    const router = useRouter();\n\n    const initErrorMessage: ErrorMessage = {\n      user_name: \"\",\n        user_id: \"\",\n        password_digest: \"\",\n        email: \"\",\n        phone_number: \"\",\n        birthday: \"\",\n    }\n\n    const refState = reactive<State>({\n      user: {\n        post_count: 0,\n        like_count: 0,\n        follow_count: 0,\n        follower_count: 0,\n        message_user_count: 0,\n        id: 0,\n        user_name: \"\",\n        user_id: \"\",\n        password: \"\",\n        self_introduction: \"\",\n        email: \"\",\n        phone_number: 0,\n        birthday: new Date(),\n        image: \"\",\n        can_like_notification: false,\n        can_comment_notification: false,\n        can_message_notification: false,\n        can_calender_notification: false,\n        is_delete: false,\n        created_at: new Date(),\n        updated_at: new Date(),\n      },\n      error_message: {\n        user_name: \"\",\n        user_id: \"\",\n        password_digest: \"\",\n        email: \"\",\n        phone_number: \"\",\n        birthday: \"\",\n      },\n      isUpdate: false,\n    });\n\n    //ユーザー情報取得\n    onMounted(async () => {\n      const result = await axios.get(\"http://localhost:3000/users/\" + props.id);\n      refState.user = result.data[0];\n      refState.isUpdate = Boolean(refState.user.id);\n      console.log(refState.isUpdate)\n    });\n\n    //ユーザー新規登録\n    const createUser = async () => {\n      await axios\n        .post(\"http://localhost:3000/users/\", {\n          user: refState.user,\n        })\n        .then((response) => {\n          console.log(\"create\");\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    //ユーザー更新\n    const updateUser = async () => {\n      //エラーメッセージをクリア\n      Object.assign(refState.error_message, reactive(initErrorMessage));\n\n      //更新処理をapiに投げる\n      await axios\n        .patch(\"http://localhost:3000/users/\" + props.id, {\n          user: refState.user,\n        })\n        .then((response) => {\n          //一覧画面に遷移\n          transitionList();\n        })\n        .catch((error) => {\n          //エラーメッセージを格納\n          Object.assign(refState.error_message, reactive(error.response.data));\n        });\n    };\n\n    //ユーザー登録・更新処理\n    const postUser = () => {\n      if (props.id == \"0\") {\n        createUser();\n      } else {\n        updateUser();\n      }\n    };\n\n    const transitionList = () => {\n      router.push({\n        name: \"UserList\",\n      });\n    };\n\n    const judgeFlag = (flag: boolean) => {\n      if (flag) {\n        return \"通知を行う\";\n      } else {\n        return \"\";\n      }\n    };\n\n    const judgeDelete = (flag: boolean) => {\n      if (flag) {\n        return \"削除\";\n      } else {\n        return \"\";\n      }\n    };\n\n    const judgeDisplay = (displayText: string) => {\n      const isDisplay = !!displayText;\n      return !isDisplay;\n    };\n\n    const arrayToString = (ary: Array<string>): string => {\n      const str = ary.join(\"¥n\");\n      return str;\n    };\n\n    return {\n      refState,\n      transitionList,\n      judgeFlag,\n      postUser,\n      arrayToString,\n      judgeDisplay,\n    };\n  },\n});\n</script>\n\n<style scoped>\nul {\n  list-style: none;\n  padding-left: 0;\n}\n\nli,\n.self-introduction {\n  border-radius: 6px;\n  background-color: #ffffff;\n  color: #636363;\n}\n\ntextarea {\n  resize: none;\n  height: 100px;\n}\n\n.table th {\n  width: 15%;\n  padding: 10px 40px;\n  border-style: none;\n}\n\n.table td {\n  border-style: none;\n}\n\n.w-19 {\n  width: 19%;\n}\n\n.w-24 {\n  width: 24%;\n}\n\n.w-49 {\n  width: 49%;\n}\n\n.noti {\n  width: 30%;\n  margin-bottom: 10px;\n  margin-left: 3.3%;\n}\n\n.select-user-icon {\n  width: 100px;\n}\n\n.display-none {\n  display: none;\n}\n</style>\n"]}]}