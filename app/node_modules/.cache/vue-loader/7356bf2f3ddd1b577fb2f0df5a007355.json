{"remainingRequest":"/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/adminPage/user/UserList.vue?vue&type=style&index=0&id=da2fd188&scoped=true&lang=css","dependencies":[{"path":"/app/app/src/components/adminPage/user/UserList.vue","mtime":1639907809416},{"path":"/app/app/node_modules/css-loader/dist/cjs.js","mtime":1639906765242},{"path":"/app/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1639906773228},{"path":"/app/app/node_modules/postcss-loader/src/index.js","mtime":1639906767500},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJy4uLy4uLy4uL2Nzcy9hZG1pblBhZ2UvdXNlci9saXN0U3R5bGUuY3NzJzsK"},{"version":3,"sources":["/app/app/src/components/adminPage/user/UserList.vue"],"names":[],"mappings":";AAkHA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/app/app/src/components/adminPage/user/UserList.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"UserList\" class=\"user-list\">\n    <h2>ユーザー一覧</h2>\n    <div class=\"user-list-wrapper\">\n      <div class=\"serch-wrapper\">\n        <div class=\"serch-user-name\">\n          <label>ユーザーID、メールアドレス</label>\n          <input v-model=\"searchParam.userIdOrEmail\">\n          <button @click=\"searchUsers\" >送信</button>\n        </div>\n      </div>\n      <table>\n        <tr class=\"table-header\">\n          <th class=\"id\">id</th>\n          <th class=\"user-name\">ユーザー名</th>\n          <th class=\"user-id\">表示用ユーザーID</th>\n          <th class=\"self-introduction\">自己紹介</th>\n          <th class=\"email\">メールアドレス</th>\n          <th class=\"phone-number\">電話番号</th>\n          <th class=\"birthday\">生年月日</th>\n          <th class=\"image\">画像</th>\n          <th class=\"post-count\">投稿数</th>\n          <th class=\"like\">いいね通知</th>\n          <th class=\"comment\">コメント通知</th>\n          <th class=\"message\">メッセージ通知</th>\n          <th class=\"calender\">カレンダー通知</th>\n          <th class=\"is_delete\">削除</th>\n          <th class=\"created-at\">登録日時</th>\n          <th class=\"updated-at\">更新日時</th>\n        </tr>\n        <tr v-for=\"(user, index) in users\" :key=\"index\">\n          <td>{{ user.id }}</td>\n          <td>{{ user.user_name }}</td>\n          <td>{{ user.display_user_id }}</td>\n          <td>{{ user.self_introduction }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.phone_number }}</td>\n          <td>{{ user.birthday }}</td>\n          <td>{{ user.image }}</td>\n          <th>{{ user.post_count }}</th>\n          <td>{{ judgeFlag(user.can_like_notification) }}</td>\n          <td>{{ judgeFlag(user.can_comment_notification) }}</td>\n          <td>{{ judgeFlag(user.can_message_notification) }}</td>\n          <td>{{ judgeFlag(user.can_calender_notification) }}</td>\n          <td>{{ judgeDelete(user.is_delete) }}</td>\n          <td>{{ user.created_at }}</td>\n          <td>{{ user.updated_at }}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-console */\nimport axios from 'axios'\nexport default {\n  // ここの書き方があやふや\n  data: function () {\n    return {\n      users: [],\n      searchParam: {\n        userIdOrEmail: null\n      }\n    }\n  },\n  // 実行するメソッドを定義？\n  mounted: function () {\n    this.fetchUsers()\n  },\n  /* computed:{\n        FilterBook: function(){\n            return this.books.filter(book => book.delete_flg == false)\n        }\n    }, */\n  // メソッド定義する場所\n  methods: {\n    fetchUsers: async function () {\n      const result = await axios.get('http://localhost:3000/users')\n      this.users = { ...result.data }\n    },\n    judgeFlag: function (flag) {\n      if (flag) {\n        return '◯'\n      } else {\n        return ''\n      }\n    },\n    judgeDelete: function (flag) {\n      if (flag) {\n        return '削除'\n      } else {\n        return ''\n      }\n    },\n    searchUsers: async function () {\n      if (this.searchParam.userIdOrEmail != null) {\n        const result = await axios.get('http://localhost:3000/users', {\n          params: {\n            user_id_or_email: this.searchParam.userIdOrEmail\n          }\n        })\n        this.users = { ...result.data }\n      }\n    }\n    /* goToRegisterBook: function(){\n            this.$router.push(\"/CreateBook\");\n            this.$router.forward();\n        } */\n  }\n}\n</script>\n\n<style scoped>\n@import '../../../css/adminPage/user/listStyle.css';\n</style>"]}]}