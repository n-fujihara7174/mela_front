{"remainingRequest":"/app/app/node_modules/babel-loader/lib/index.js!/app/app/node_modules/ts-loader/index.js??ref--15-2!/app/app/node_modules/eslint-loader/index.js??ref--14-0!/app/app/src/composables/validationCheck.ts","dependencies":[{"path":"/app/app/src/composables/validationCheck.ts","mtime":1641739088288},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/babel-loader/lib/index.js","mtime":1639906767681},{"path":"/app/app/node_modules/ts-loader/index.js","mtime":1639906768649},{"path":"/app/app/node_modules/eslint-loader/index.js","mtime":1639906762562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgbGVuZ3RoRXJyb3JNZXNzYWdlID0gIj/mloflrZfku6XkuIvjgaflhaXlipvjgZfjgabjgY/jgaDjgZXjgYQiOwpjb25zdCByZXF1aXJlRXJyb3JNZXNzYWdlID0gIuW/heOBmuWFpeWKm+OBl+OBpuOBj+OBoOOBleOBhCI7CmV4cG9ydCBjb25zdCBsZW5ndGhDaGVjayA9IChDaGVja1RhcmdldCwgTWF4TnVtKSA9PiB7CiAgaWYgKENoZWNrVGFyZ2V0Lmxlbmd0aCA+IE1heE51bSkgewogICAgcmV0dXJuIGxlbmd0aEVycm9yTWVzc2FnZS5yZXBsYWNlKCI/IiwgTWF4TnVtLnRvU3RyaW5nKCkpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gIiI7CiAgfQp9OwpleHBvcnQgY29uc3QgcmVxdWlyZUNoZWNrID0gQ2hlY2tUYXJnZXQgPT4gewogIGlmIChDaGVja1RhcmdldC50b1N0cmluZygpID09ICIiIHx8IENoZWNrVGFyZ2V0LnRvU3RyaW5nKCkgPT0gIjAiKSB7CiAgICByZXR1cm4gcmVxdWlyZUVycm9yTWVzc2FnZTsKICB9IGVsc2UgewogICAgcmV0dXJuICIiOwogIH0KfTs="},{"version":3,"sources":["/app/app/node_modules/eslint-loader/index.js??ref--14-0!/app/app/src/composables/validationCheck.ts"],"names":[],"mappings":"AAAA,MAAM,kBAAkB,GAAG,gBAA3B;AACA,MAAM,mBAAmB,GAAG,YAA5B;AAEA,OAAO,MAAM,WAAW,GAAG,CAAC,WAAD,EAAsB,MAAtB,KAAwC;AACjE,MAAG,WAAW,CAAC,MAAZ,GAAqB,MAAxB,EAA+B;AAC7B,WAAO,kBAAkB,CAAC,OAAnB,CAA2B,GAA3B,EAAgC,MAAM,CAAC,QAAP,EAAhC,CAAP;AACD,GAFD,MAEK;AACH,WAAO,EAAP;AACD;AACF,CANM;AAQP,OAAO,MAAM,YAAY,GAAI,WAAD,IAAiC;AAC3D,MAAG,WAAW,CAAC,QAAZ,MAA0B,EAA1B,IAAgC,WAAW,CAAC,QAAZ,MAA0B,GAA7D,EAAiE;AAC/D,WAAO,mBAAP;AACD,GAFD,MAEK;AACH,WAAO,EAAP;AACD;AACF,CANM","sourcesContent":["const lengthErrorMessage = \"?文字以下で入力してください\";\nconst requireErrorMessage = \"必ず入力してください\";\n\nexport const lengthCheck = (CheckTarget: string, MaxNum: number) => {\n  if(CheckTarget.length > MaxNum){\n    return lengthErrorMessage.replace(\"?\", MaxNum.toString());\n  }else{\n    return \"\"\n  }\n}\n\nexport const requireCheck = (CheckTarget: string | number) => {\n  if(CheckTarget.toString() == \"\" || CheckTarget.toString() == \"0\"){\n    return requireErrorMessage;\n  }else{\n    return \"\";\n  }\n}\n"],"sourceRoot":""}]}