{"remainingRequest":"/app/app/node_modules/babel-loader/lib/index.js!/app/app/node_modules/ts-loader/index.js??ref--15-2!/app/app/node_modules/eslint-loader/index.js??ref--14-0!/app/app/src/composables/validationCheck.ts","dependencies":[{"path":"/app/app/src/composables/validationCheck.ts","mtime":1646488934703},{"path":"/app/app/babel.config.js","mtime":1643593581402},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/babel-loader/lib/index.js","mtime":1639906767681},{"path":"/app/app/node_modules/ts-loader/index.js","mtime":1639906768649},{"path":"/app/app/node_modules/eslint-loader/index.js","mtime":1639906762562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgbGVuZ3RoRXJyb3JNZXNzYWdlID0gIj/mloflrZfku6XkuIvjgaflhaXlipvjgZfjgabjgY/jgaDjgZXjgYQiOwpjb25zdCByZXF1aXJlRXJyb3JNZXNzYWdlID0gIuW/heOBmuWFpeWKm+OBl+OBpuOBj+OBoOOBleOBhCI7CmNvbnN0IGRhdGVGb3JtYXRFcnJvck1lc3NhZ2UgPSAiMjAyMi8wMS8wMeOBruW9ouW8j+OBp+WFpeWKm+OBl+OBpuOBj+OBoOOBleOBhCI7CmNvbnN0IGRhdGVWYWx1ZUVycm9yTWVzc2FnZSA9ICLmnInlirnjgarml6Xku5jjgpLlhaXlipvjgZfjgabjgY/jgaDjgZXjgYQiOwpleHBvcnQgY29uc3QgbGVuZ3RoQ2hlY2sgPSAoY2hlY2tUYXJnZXQsIG1heE51bSkgPT4gewogIGlmIChjaGVja1RhcmdldC5sZW5ndGggPiBtYXhOdW0pIHsKICAgIHJldHVybiBsZW5ndGhFcnJvck1lc3NhZ2UucmVwbGFjZSgiPyIsIG1heE51bS50b1N0cmluZygpKTsKICB9IGVsc2UgewogICAgcmV0dXJuICIiOwogIH0KfTsKZXhwb3J0IGNvbnN0IHJlcXVpcmVDaGVjayA9IGNoZWNrVGFyZ2V0ID0+IHsKICBpZiAoY2hlY2tUYXJnZXQgPT0gIiIgfHwgY2hlY2tUYXJnZXQgPT0gIjAiKSB7CiAgICByZXR1cm4gcmVxdWlyZUVycm9yTWVzc2FnZTsKICB9IGVsc2UgewogICAgcmV0dXJuICIiOwogIH0KfTsKZXhwb3J0IGNvbnN0IGNoZWNrRGF0ZUZvcm1hdCA9IHN0ckRhdGUgPT4gewogIGlmICghc3RyRGF0ZS5tYXRjaCgvXlxkezR9XC9cZHsyfVwvXGR7Mn0kLykpIHsKICAgIHJldHVybiBkYXRlRm9ybWF0RXJyb3JNZXNzYWdlOwogIH0gZWxzZSB7CiAgICByZXR1cm4gIiI7CiAgfQp9OwpleHBvcnQgY29uc3QgY2hlY2tEYXRlVmFsdWUgPSBzdHJEYXRlID0+IHsKICBjb25zdCBkYXRlID0gbmV3IERhdGUoc3RyRGF0ZSk7CgogIGlmIChpc05hTihkYXRlLmdldERhdGUoKSkpIHsKICAgIHJldHVybiBkYXRlVmFsdWVFcnJvck1lc3NhZ2U7CiAgfSBlbHNlIHsKICAgIHJldHVybiAiIjsKICB9Cn07CmV4cG9ydCBjb25zdCBjaGVja0RhdGUgPSBzdHJEYXRlID0+IHsKICBjb25zdCBlcnJvck1lc3NhZ2UgPSBjaGVja0RhdGVGb3JtYXQoc3RyRGF0ZSk7CgogIGlmICghZXJyb3JNZXNzYWdlKSB7CiAgICByZXR1cm4gY2hlY2tEYXRlVmFsdWUoc3RyRGF0ZSk7CiAgfQoKICByZXR1cm4gZXJyb3JNZXNzYWdlOwp9OyAvL+OCqOODqeODvOODoeODg+OCu+ODvOOCuOOCkuWPluW+l+OAggoKZXhwb3J0IGNvbnN0IGRldGVybWluZUFzc2lnblZhbHVlID0gKC4uLnN0ckFycmF5KSA9PiB7CiAgbGV0IGVycm9yTWVzc2FnZSA9ICIiOwogIGxldCBpID0gMDsKCiAgd2hpbGUgKGkgPCBzdHJBcnJheS5sZW5ndGgpIHsKICAgIGlmIChzdHJBcnJheVtpXS5sZW5ndGggIT09IDApIHsKICAgICAgZXJyb3JNZXNzYWdlID0gc3RyQXJyYXlbaV07CiAgICB9CgogICAgaSsrOwogIH0KCiAgcmV0dXJuIGVycm9yTWVzc2FnZTsKfTs="},{"version":3,"sources":["/app/app/node_modules/eslint-loader/index.js??ref--14-0!/app/app/src/composables/validationCheck.ts"],"names":[],"mappings":"AAAA,MAAM,kBAAkB,GAAG,gBAA3B;AACA,MAAM,mBAAmB,GAAG,YAA5B;AACA,MAAM,sBAAsB,GAAG,wBAA/B;AACA,MAAM,qBAAqB,GAAG,gBAA9B;AAEA,OAAO,MAAM,WAAW,GAAG,CAAC,WAAD,EAAsB,MAAtB,KAAgD;AACzE,MAAI,WAAW,CAAC,MAAZ,GAAqB,MAAzB,EAAiC;AAC/B,WAAO,kBAAkB,CAAC,OAAnB,CAA2B,GAA3B,EAAgC,MAAM,CAAC,QAAP,EAAhC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CANM;AAQP,OAAO,MAAM,YAAY,GAAI,WAAD,IAAgC;AAC1D,MAAI,WAAW,IAAI,EAAf,IAAqB,WAAW,IAAI,GAAxC,EAA6C;AAC3C,WAAO,mBAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CANM;AAQP,OAAO,MAAM,eAAe,GAAI,OAAD,IAA4B;AACzD,MAAI,CAAC,OAAO,CAAC,KAAR,CAAc,uBAAd,CAAL,EAA6C;AAC3C,WAAO,sBAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CANM;AAQP,OAAO,MAAM,cAAc,GAAI,OAAD,IAA4B;AACxD,QAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,OAAT,CAAb;;AACA,MAAI,KAAK,CAAC,IAAI,CAAC,OAAL,EAAD,CAAT,EAA2B;AACzB,WAAO,qBAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAPM;AASP,OAAO,MAAM,SAAS,GAAI,OAAD,IAA4B;AACnD,QAAM,YAAY,GAAG,eAAe,CAAC,OAAD,CAApC;;AACA,MAAI,CAAC,YAAL,EAAmB;AACjB,WAAO,cAAc,CAAC,OAAD,CAArB;AACD;;AACD,SAAO,YAAP;AACD,CANM,C,CAQP;;AACA,OAAO,MAAM,oBAAoB,GAAG,CAAC,GAAG,QAAJ,KAAkC;AACpE,MAAI,YAAY,GAAG,EAAnB;AACA,MAAI,CAAC,GAAG,CAAR;;AAEA,SAAO,CAAC,GAAG,QAAQ,CAAC,MAApB,EAA4B;AAC1B,QAAI,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,MAAA,YAAY,GAAG,QAAQ,CAAC,CAAD,CAAvB;AACD;;AACD,IAAA,CAAC;AACF;;AAED,SAAO,YAAP;AACD,CAZM","sourcesContent":["const lengthErrorMessage = \"?文字以下で入力してください\";\nconst requireErrorMessage = \"必ず入力してください\";\nconst dateFormatErrorMessage = \"2022/01/01の形式で入力してください\";\nconst dateValueErrorMessage = \"有効な日付を入力してください\";\n\nexport const lengthCheck = (checkTarget: string, maxNum: number): string => {\n  if (checkTarget.length > maxNum) {\n    return lengthErrorMessage.replace(\"?\", maxNum.toString());\n  } else {\n    return \"\";\n  }\n};\n\nexport const requireCheck = (checkTarget: string): string => {\n  if (checkTarget == \"\" || checkTarget == \"0\") {\n    return requireErrorMessage;\n  } else {\n    return \"\";\n  }\n};\n\nexport const checkDateFormat = (strDate: string): string => {\n  if (!strDate.match(/^\\d{4}\\/\\d{2}\\/\\d{2}$/)) {\n    return dateFormatErrorMessage;\n  } else {\n    return \"\";\n  }\n};\n\nexport const checkDateValue = (strDate: string): string => {\n  const date = new Date(strDate);\n  if (isNaN(date.getDate())) {\n    return dateValueErrorMessage;\n  } else {\n    return \"\";\n  }\n};\n\nexport const checkDate = (strDate: string): string => {\n  const errorMessage = checkDateFormat(strDate);\n  if (!errorMessage) {\n    return checkDateValue(strDate);\n  }\n  return errorMessage;\n};\n\n//エラーメッセージを取得。\nexport const determineAssignValue = (...strArray: string[]): string => {\n  let errorMessage = \"\";\n  let i = 0;\n\n  while (i < strArray.length) {\n    if (strArray[i].length !== 0) {\n      errorMessage = strArray[i];\n    }\n    i++;\n  }\n\n  return errorMessage;\n};\n"],"sourceRoot":""}]}