{"remainingRequest":"/app/app/node_modules/babel-loader/lib/index.js!/app/app/node_modules/ts-loader/index.js??ref--15-2!/app/app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/adminPage/post/PostEdit.vue?vue&type=script&lang=ts","dependencies":[{"path":"/app/app/src/components/adminPage/post/PostEdit.vue","mtime":1645280409442},{"path":"/app/app/babel.config.js","mtime":1643593581402},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/babel-loader/lib/index.js","mtime":1639906767681},{"path":"/app/app/node_modules/ts-loader/index.js","mtime":1639906768649},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/vue-loader-v16/dist/index.js","mtime":1639906767487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/app/app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/app/app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/app/app/src/components/adminPage/post/PostEdit.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\n\nimport { defineComponent, reactive, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { Post } from \"@/types/Post\";\nimport {\n  lengthCheck,\n  requireCheck,\n  determineAssignValue,\n} from \"@/composables/validationCheck\";\nimport InputField from \"@/components/adminPage/common/molecules/InputField.vue\";\n\n/* ***********************************************************************************\nPost型にプロパティを追加する\n*********************************************************************************** */\ninterface ExtendPost extends Post {\n  unique_user_id: string;\n}\n\n/* ***********************************************************************************\nエラーメッセージを格納するオブジェクトの型を定義\n*********************************************************************************** */\ninterface ErrorMessage {\n  user: string;\n  post_image: string;\n  post_contents: string;\n}\n\n/* ***********************************************************************************\n本モジュール全体で使用する変数の定義\n*********************************************************************************** */\ninterface State {\n  post: ExtendPost;\n  error_message: ErrorMessage;\n  isUpdate: boolean;\n  isNotInit: boolean;\n}\n\n/* ***********************************************************************************\n\n*********************************************************************************** */\nexport default defineComponent({\n  components: {\n    InputField: InputField,\n  },\n\n  props: {\n    id: {\n      type: String,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const router = useRouter();\n\n    const initErrorMessage: ErrorMessage = {\n      user: \"\",\n      post_image: \"\",\n      post_contents: \"\",\n    };\n\n    const refState = reactive<State>({\n      post: {\n        id: 0,\n        user_id: 0,\n        unique_user_id: \"\",\n        post_contents: \"\",\n        post_image: \"\",\n        is_delete: false,\n        created_at: \"\",\n      },\n      error_message: {\n        user: \"\",\n        post_image: \"\",\n        post_contents: \"\",\n      },\n      isUpdate: false,\n      isNotInit: false,\n    });\n\n    /* ***********************************************************************************\n    サジェスト入力用のリストを取得する\n    *********************************************************************************** */\n    //SuggestInputの引数に渡すユーザー名リストを取得\n    const getUserIdList = () => {\n      console.log(\"postEditのユーザー名リスト\");\n      const oReq = new XMLHttpRequest();\n      oReq.open(\"GET\", \"http://localhost:3000/userIdList/\", false);\n      oReq.send();\n      return oReq.response;\n    };\n\n    const stringToArray = (convertTarget: string) => {\n      let arrayText = convertTarget.slice(1, convertTarget.length - 1);\n      let re = new RegExp('\\\\\"', \"g\");\n\n      arrayText = arrayText.replaceAll(re, \"\");\n      return arrayText.split(\",\");\n    };\n\n    //ユーザーIDリストのレスポンスが文字列になっているので、分割して配列にする必要がある\n    const userIdList = stringToArray(getUserIdList());\n\n    /* ***********************************************************************************\n    選択したレコードの情報を取得\n    *********************************************************************************** */\n    const formatDate = (strDate: string) => {\n      return dayjs(strDate).format(\"YYYY/MM/DD hh:mm:ss\");\n    };\n\n    const getPostById = () => {\n      const oReq = new XMLHttpRequest();\n      oReq.open(\"GET\", \"http://localhost:3000/posts/\" + props.id, false);\n      oReq.send();\n      return JSON.parse(oReq.response);\n    };\n\n    //ユーザー情報取得\n    refState.isUpdate = !!Number(props.id);\n    if (refState.isUpdate) {\n      const postObject = getPostById();\n      refState.post = postObject[0];\n\n      //日付をYYYY/MM/DD ss:mmの形式にフォーマットする\n      refState.post.created_at = formatDate(refState.post.created_at);\n    }\n\n    /* ***********************************************************************************\n      投稿情報 登録処理\n    *********************************************************************************** */\n    const createPost = async () => {\n      //エラーメッセージをクリア\n      Object.assign(refState.error_message, reactive(initErrorMessage));\n\n      if (frontValidationCheck()) {\n        await axios\n          .post(\"http://localhost:3000/posts/\", {\n            post: refState.post,\n          })\n          .then(() => {\n            //一覧画面に遷移\n            transitionPostList();\n          })\n          .catch((error) => {\n            //エラーメッセージを格納\n            refState.error_message = error.response.data;\n            refState.isNotInit = true;\n          });\n      }\n    };\n\n    /* ***********************************************************************************\n      投稿情報 更新処理\n    *********************************************************************************** */\n    const updatePost = async () => {\n      console.log(\"更新処理\");\n      //エラーメッセージをクリア\n      Object.assign(refState.error_message, reactive(initErrorMessage));\n\n      //バリデーションチェックが問題なければ更新処理に進む\n      if (frontValidationCheck()) {\n        console.log(\"更新処理if内部\");\n        //更新処理をapiに投げる\n        await axios\n          .patch(\"http://localhost:3000/posts/\" + props.id, {\n            post: refState.post,\n          })\n          .then(() => {\n            //一覧画面に遷移\n            transitionPostList();\n          })\n          .catch((error) => {\n            //エラーメッセージを格納\n            refState.error_message = error.response.data;\n            refState.isNotInit = true;\n          });\n      }\n    };\n\n    /* ***********************************************************************************\n      バリデーション\n    *********************************************************************************** */\n    const frontValidationCheck = (): boolean => {\n      return !(\n        !!refState.error_message.user ||\n        !!refState.error_message.post_image ||\n        !!refState.error_message.post_contents\n      );\n    };\n\n    watch(\n      () => refState.post.unique_user_id,\n      () => {\n        const lengthCheckResult = lengthCheck(refState.post.unique_user_id, 45);\n        const requireCheckResult = requireCheck(refState.post.unique_user_id);\n        refState.error_message.user = determineAssignValue(\n          lengthCheckResult,\n          requireCheckResult\n        );\n      }\n    );\n\n    watch(\n      () => refState.post.post_contents,\n      () => {\n        refState.error_message.post_contents = lengthCheck(\n          refState.post.post_contents,\n          120\n        );\n      }\n    );\n\n    watch(\n      () => refState.post.post_image,\n      () => {\n        refState.error_message.post_image = lengthCheck(\n          refState.post.post_image,\n          1000\n        );\n      }\n    );\n\n    /* ***********************************************************************************\n\n    *********************************************************************************** */\n    const isInvalid = (errorMesssage: string) => {\n      return !!errorMesssage;\n    };\n\n    //一覧画面に遷移\n    const transitionPostList = () => {\n      router.push({\n        name: \"PostList\",\n      });\n    };\n\n    return {\n      refState,\n      isInvalid,\n      transitionPostList,\n      createPost,\n      updatePost,\n      userIdList,\n      frontValidationCheck,\n    };\n  },\n});\n"],"sourceRoot":""}]}