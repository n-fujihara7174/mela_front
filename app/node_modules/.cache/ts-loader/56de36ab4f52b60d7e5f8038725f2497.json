{"remainingRequest":"/app/app/node_modules/babel-loader/lib/index.js!/app/app/node_modules/ts-loader/index.js??ref--15-2!/app/app/node_modules/eslint-loader/index.js??ref--14-0!/app/app/src/composables/validationCheck.ts","dependencies":[{"path":"/app/app/src/composables/validationCheck.ts","mtime":1643315956038},{"path":"/app/app/node_modules/cache-loader/dist/cjs.js","mtime":1639906761392},{"path":"/app/app/node_modules/babel-loader/lib/index.js","mtime":1639906767681},{"path":"/app/app/node_modules/ts-loader/index.js","mtime":1639906768649},{"path":"/app/app/node_modules/eslint-loader/index.js","mtime":1639906762562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgbGVuZ3RoRXJyb3JNZXNzYWdlID0gIj/mloflrZfku6XkuIvjgaflhaXlipvjgZfjgabjgY/jgaDjgZXjgYQiOwpjb25zdCByZXF1aXJlRXJyb3JNZXNzYWdlID0gIuW/heOBmuWFpeWKm+OBl+OBpuOBj+OBoOOBleOBhCI7CmNvbnN0IGRhdGVGb3JtYXRFcnJvck1lc3NhZ2UgPSAiMjAyMi8xLzEx44Gu5b2i5byP44Gn5YWl5Yqb44GX44Gm44GP44Gg44GV44GEIjsKY29uc3QgZGF0ZVZhbHVlRXJyb3JNZXNzYWdlID0gIuacieWKueOBquaXpeS7mOOCkuWFpeWKm+OBl+OBpuOBj+OBoOOBleOBhCI7CmV4cG9ydCBjb25zdCBsZW5ndGhDaGVjayA9IChjaGVja1RhcmdldCwgbWF4TnVtKSA9PiB7CiAgY29uc29sZS5sb2coInR5cGVvZiBjaGVja1RhcmdldCA6ICIgKyB0eXBlb2YgY2hlY2tUYXJnZXQpOwoKICBpZiAoY2hlY2tUYXJnZXQubGVuZ3RoID4gbWF4TnVtKSB7CiAgICByZXR1cm4gbGVuZ3RoRXJyb3JNZXNzYWdlLnJlcGxhY2UoIj8iLCBtYXhOdW0udG9TdHJpbmcoKSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiAiIjsKICB9Cn07CmV4cG9ydCBjb25zdCByZXF1aXJlQ2hlY2sgPSBjaGVja1RhcmdldCA9PiB7CiAgaWYgKGNoZWNrVGFyZ2V0ID09ICIiIHx8IGNoZWNrVGFyZ2V0ID09ICIwIikgewogICAgcmV0dXJuIHJlcXVpcmVFcnJvck1lc3NhZ2U7CiAgfSBlbHNlIHsKICAgIHJldHVybiAiIjsKICB9Cn07CmV4cG9ydCBjb25zdCBjaGVja0RhdGVGb3JtYXQgPSBzdHJEYXRlID0+IHsKICBpZiAoIXN0ckRhdGUubWF0Y2goL15cZHs0fVwvXGR7Mn1cL1xkezJ9JC8pKSB7CiAgICBjb25zb2xlLmxvZygiY2hlY2tEYXRlRm9ybWF044Gn5paH5a2X5YiX44KS5aSJ5o+bIik7CiAgICByZXR1cm4gZGF0ZUZvcm1hdEVycm9yTWVzc2FnZTsKICB9IGVsc2UgewogICAgcmV0dXJuICIiOwogIH0KfTsKZXhwb3J0IGNvbnN0IGNoZWNrRGF0ZVZhbHVlID0gc3RyRGF0ZSA9PiB7CiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHN0ckRhdGUpOwoKICBpZiAoaXNOYU4oZGF0ZS5nZXREYXRlKCkpKSB7CiAgICByZXR1cm4gZGF0ZVZhbHVlRXJyb3JNZXNzYWdlOwogIH0gZWxzZSB7CiAgICByZXR1cm4gIiI7CiAgfQp9Ow=="},{"version":3,"sources":["/app/app/node_modules/eslint-loader/index.js??ref--14-0!/app/app/src/composables/validationCheck.ts"],"names":[],"mappings":"AAAA,MAAM,kBAAkB,GAAG,gBAA3B;AACA,MAAM,mBAAmB,GAAG,YAA5B;AACA,MAAM,sBAAsB,GAAG,uBAA/B;AACA,MAAM,qBAAqB,GAAG,gBAA9B;AAEA,OAAO,MAAM,WAAW,GAAG,CAAC,WAAD,EAAsB,MAAtB,KAAgD;AACzE,EAAA,OAAO,CAAC,GAAR,CAAY,0BAA0B,OAAO,WAA7C;;AACA,MAAI,WAAW,CAAC,MAAZ,GAAqB,MAAzB,EAAiC;AAC/B,WAAO,kBAAkB,CAAC,OAAnB,CAA2B,GAA3B,EAAgC,MAAM,CAAC,QAAP,EAAhC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAPM;AASP,OAAO,MAAM,YAAY,GAAI,WAAD,IAAgC;AAC1D,MAAI,WAAW,IAAI,EAAf,IAAqB,WAAW,IAAI,GAAxC,EAA6C;AAC3C,WAAO,mBAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CANM;AAQP,OAAO,MAAM,eAAe,GAAI,OAAD,IAA4B;AACzD,MAAI,CAAC,OAAO,CAAC,KAAR,CAAc,uBAAd,CAAL,EAA6C;AAC3C,IAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACA,WAAO,sBAAP;AACD,GAHD,MAGO;AACL,WAAO,EAAP;AACD;AACF,CAPM;AASP,OAAO,MAAM,cAAc,GAAI,OAAD,IAA4B;AACxD,QAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,OAAT,CAAb;;AACA,MAAI,KAAK,CAAC,IAAI,CAAC,OAAL,EAAD,CAAT,EAA2B;AACzB,WAAO,qBAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAPM","sourcesContent":["const lengthErrorMessage = \"?文字以下で入力してください\";\nconst requireErrorMessage = \"必ず入力してください\";\nconst dateFormatErrorMessage = \"2022/1/11の形式で入力してください\";\nconst dateValueErrorMessage = \"有効な日付を入力してください\";\n\nexport const lengthCheck = (checkTarget: string, maxNum: number): string => {\n  console.log(\"typeof checkTarget : \" + typeof checkTarget);\n  if (checkTarget.length > maxNum) {\n    return lengthErrorMessage.replace(\"?\", maxNum.toString());\n  } else {\n    return \"\";\n  }\n};\n\nexport const requireCheck = (checkTarget: string): string => {\n  if (checkTarget == \"\" || checkTarget == \"0\") {\n    return requireErrorMessage;\n  } else {\n    return \"\";\n  }\n};\n\nexport const checkDateFormat = (strDate: string): string => {\n  if (!strDate.match(/^\\d{4}\\/\\d{2}\\/\\d{2}$/)) {\n    console.log(\"checkDateFormatで文字列を変換\");\n    return dateFormatErrorMessage;\n  } else {\n    return \"\";\n  }\n};\n\nexport const checkDateValue = (strDate: string): string => {\n  const date = new Date(strDate);\n  if (isNaN(date.getDate())) {\n    return dateValueErrorMessage;\n  } else {\n    return \"\";\n  }\n};\n"],"sourceRoot":""}]}